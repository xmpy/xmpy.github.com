<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Xiaomeng's Notes</title><link href="/" rel="alternate"></link><link href="/feeds/qian-duan-ji-zhu-front-end.atom.xml" rel="self"></link><id>/</id><updated>2014-02-01T00:00:00+08:00</updated><entry><title>JavaScript中的onload事件</title><link href="/pages/2014/02/01/js_onload_event.html" rel="alternate"></link><updated>2014-02-01T00:00:00+08:00</updated><author><name>XiaomengZhao</name></author><id>tag:,2014-02-01:pages/2014/02/01/js_onload_event.html</id><summary type="html">&lt;p&gt;首先，onload属于&lt;a href="http://www.w3schools.com/jsref/dom_obj_event.asp"&gt;HTML DOM Events&lt;/a&gt;，而HTML DOM Events的定义如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Event对象代表事件的状态，比如事件在其中发生的元素、键盘按键的状态、鼠标的位置、鼠标按钮的状态。
HTML DOM事件通常与处理函数绑定在一起，允许Javascript为HTML文档中的元素注册不同的事件处理函数，处理函数不会在事件发生之前被执行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而onload事件是在一张页面或一副图像完成后加载。可以用在&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;frameset&amp;gt;&lt;/code&gt;,&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;input type="image"&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;这些标签中。但是绝大多数情况下，onload会用在&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;元素中，&lt;strong&gt;一旦一个网页全部加载好（包括图片, 脚本文件, CSS样式表，etc）&lt;/strong&gt;，就执行事件处理函数，所以一般onload处理函数都是最后执行的。&lt;/p&gt;
&lt;p&gt;你可以这样写：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    function myFunction()
    {
        alert(&amp;quot;Page is loaded&amp;quot;);
    }
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&lt;/span&gt; &lt;span class="na"&gt;onload=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;myFunction()&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello World!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;你还可以在Javascript中实现同样的功能，只要在js中定义&lt;code&gt;window.onload&lt;/code&gt;即可：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    window.onload = myFunction;
    function myFunction()
    {
    alert(&amp;quot;Page is loaded&amp;quot;);
    }
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello World!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;window.onload指的是window对象onload属性，我们为它设置了myFunction函数。
而这个代码window.onload = myFunction是什么时候执行的呢？浏览器在加载js脚本的时候，一旦遇到&lt;strong&gt;不在任何函数体内的代码&lt;/strong&gt;，就会&lt;strong&gt;立即运行这个代码&lt;/strong&gt;，所以这个赋值会在用户能与之交互之前发生。&lt;/p&gt;
&lt;p&gt;当然onload事件不光能用在&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;标签中，同样也能用在&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;标签中。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

function load(x){
    var s=x.src;
    alert( &amp;quot;加载的图像为：&amp;quot; + s.substring(s.lastIndexOf(&amp;quot;/&amp;quot;)+1) );
}

&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.5idev.com/Public/Images/article/logo_mark.gif&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;onload=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;load(this)&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;再有，就是javascript中&lt;code&gt;window.onload&lt;/code&gt;与&lt;code&gt;jquery中$(document).ready()&lt;/code&gt;的区别。
具体请参考&lt;a href="http://www.cnblogs.com/linjiqin/archive/2011/08/03/2126672.html"&gt;http://www.cnblogs.com/linjiqin/archive/2011/08/03/2126672.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1.执行时间&lt;/p&gt;
&lt;p&gt;window.onload必须等到&lt;strong&gt;全部加载好（包括图片, 脚本文件, CSS样式表，etc）后&lt;/strong&gt;才能执行。 
$(document).ready()是DOM结构绘制完毕后就执行，不必等到加载完毕。 &lt;/p&gt;
&lt;p&gt;2.编写个数不同 &lt;/p&gt;
&lt;p&gt;window.onload不能同时编写多个，如果有多个window.onload方法，只会执行一个。
$(document).ready()可以同时编写多个，并且都可以得到执行 &lt;/p&gt;
&lt;p&gt;3.简化写法 &lt;/p&gt;
&lt;p&gt;window.onload没有简化写法。而
&lt;strong&gt;$(document).ready(function(){})可以简写成$(function(){});&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;另外，也可以使用JQuery实现Javascript中window.onload的功能：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(){&lt;/span&gt; 
&lt;span class="c1"&gt;// 编写代码 &lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;&lt;span class="err"&gt;等价于&lt;/span&gt; &lt;span class="nx"&gt;JavaScript&lt;/span&gt; &lt;span class="err"&gt;中的以下代码&lt;/span&gt; 
&lt;span class="nx"&gt;Window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(){&lt;/span&gt; 
&lt;span class="c1"&gt;// 编写代码 &lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参考文献：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;w3school对onload事件定义 &lt;a href="http://www.w3schools.com/jsref/event_onload.asp"&gt;http://www.w3schools.com/jsref/event_onload.asp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;onload事件用于图片加载 &lt;a href="http://www.5idev.com/p-javascript_events_onload.shtml"&gt;http://www.5idev.com/p-javascript_events_onload.shtml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;jquery $(document).ready() 与window.onload的区别 &lt;a href="http://www.cnblogs.com/linjiqin/archive/2011/08/03/2126672.html"&gt;http://www.cnblogs.com/linjiqin/archive/2011/08/03/2126672.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="javascript"></category><category term="jquery"></category></entry></feed>